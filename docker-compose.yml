services:
  db:
    image: postgres:17
    restart: unless-stopped
    volumes:
      - emp_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: emp_dev_db
      POSTGRES_USER: emp_dev_user
      POSTGRES_PASSWORD: TDTYgkwz2PZq2iS2fSptxqMHUkfFPbuSniJRPCFecRagpVEhyQ
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U emp_dev_user -d emp_dev_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  backend:
    build:
      context: .
      dockerfile: backend/qs.EmployeesApp.Server/qs.EmployeesApp.Web/Dockerfile
    restart: unless-stopped
    ports:
      - "8888:8888"
    depends_on:
        db:
            condition: service_healthy
    environment:
      ConnectionStrings__EmpConnection: "Host=db;Port=5432;Database=emp_dev_db;Username=emp_dev_user;Password=TDTYgkwz2PZq2iS2fSptxqMHUkfFPbuSniJRPCFecRagpVEhyQ;"
      ASPNETCORE_ENVIRONMENT: Development #Production
      ASPNETCORE_URLS: http://*:8888

volumes:
  emp_db_data: